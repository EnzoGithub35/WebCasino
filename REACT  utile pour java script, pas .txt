REACT.js : utile pour java script, pas besoin de reaload la page

linear.app : permet de gérer les tickets 

mailtrap: utile pour gérer les mails, et les envoyer depuis le code

DRIBBLE : inspiratiob pour les sites (y a des dingueries)

tailwincss : framework css
nes.css : la meme
bulma.io : la meme

particle.js : INCROYABLE POUR LES animations
animate.css : PAREILLLL

moment.js : pour les dates

chart.js : graphique avec des données

laravel : framework php

autoprefixer : indispensable pour mettre son css compatible sur tout les navigateurs

css minifier : pour réduire la taille de son css (gagner de l'espace) : ressemble a un fichier bootstrap

js obfuscator : pour "hasher" son js et qu'il soit illisible à l'oeil humain

Stripe : pour faire tout ce qui est paiement

Dribble : maquette de site


page pour changer 

utiliser socket js

faire un système de hachage de mot de passe

*zy85SlJruWDX6Obyn

améliorer la vitesse du chargement du site : GTmetrix

unused css : retiré le css inutile

RR#Ermf(RB)HB$5aag


            <!-- Formulaire pour ajouter un commentaire -->
			<form action="{{ url_for('DemoView:ajouter_commentaire', id_contact=groupe[0]) }}" method="post">
				<textarea name="description" rows="4" cols="50"></textarea><br>
				<input type="submit" value="Ajouter commentaire">
			</form>

                @route('/ajouter_commentaire/<int:id_contact>/', methods=['POST'])
    def ajouter_commentaire(self, id_contact):
        if request.method == 'POST':
            description = request.form['description']
            auteur = session['mail']
            date_creation = datetime.now().strftime("%Y-%m-%d")
            database.inserer_commentaire(description, auteur, date_creation)
            return redirect(url_for('DemoView.add_commentaire', id_contact=id_contact))


def inserer_commentaire(description, auteur, date_creation):
    conn = sqlite3.connect('crm.sqlite')
    cursor = conn.cursor()
    sql = "INSERT INTO commentaire (Description, Auteur, Date_de_creation) VALUES (?, ?, ?)"
    cursor.execute(sql, (description, auteur, date_creation))
    conn.commit()
    conn.close()

  